@page "/Statistics"
@using ChartJs.Blazor.BarChart
@using ChartJs.Blazor.BarChart.Axes
@using ChartJs.Blazor.Util
@using ChartJs.Blazor.Common
@using ChartJs.Blazor.Common.Axes
@using ChartJs.Blazor.Common.Axes.Ticks
@inject ReservationService ReservationService

<PageTitle>Statistics</PageTitle>

<div>
    <h1>Statistics Page</h1>
    <Chart Config="_config"></Chart>
    
    @foreach (var reservation in Reservations)
    {
        <div>
            <p>@reservation.StartDate.ToLocalTime().ToString("F")</p>
        </div>
    }
</div>

@code {
    private List<Reservation> Reservations { get; set; } = [];
    private BarConfig _config;

    protected override void OnInitialized()
    {
        
    }

    protected override async Task OnInitializedAsync()
    {
        _config = new BarConfig
        {
            Options = new BarOptions
            {
                Scales = new BarScales // Configure the scales
                {
                    YAxes = new List<CartesianAxis> // Configure the y-axis
                    {
                        new BarLinearCartesianAxis
                        {
                            Ticks = new LinearCartesianTicks() // Configure the ticks
                            {
                                BeginAtZero = true // Set beginAtZero to true
                            }
                        }
                    }
                },
                Responsive = true,
                Title = new OptionsTitle
                {
                    Display = true,
                    Text = "Reservations for the upcoming week!"
                }
            }
        };
        
        var today = DateTime.Now.Date;

        Reservations = (await ReservationService.GetAllReservationsAsync())
            .Where(r => r.StartDate.Date >= today && r.StartDate.Date <= today.AddDays(4))
            .OrderBy(r => r.StartDate)
            .ToList();
        
        int[] reservationCounts = new int[5];
        for (int i = 0; i < 5; i++)
        {
            var targetDate = today.AddDays(i);
            reservationCounts[i] = Reservations.Count(r => r.StartDate.Date == targetDate);
        }
        // lijst van opkomende 5 dagen hier maken
        var labels = new[] { "Today", "Tomorrow", "Day 3", "Day 4", "Day 5" };
        foreach (var label in labels)
        {
            _config.Data.Labels.Add(label);
        }

        var dataset = new BarDataset<int>(reservationCounts) // aantal reserveringen per dag hier
        {
            Label = "Reservations",
            BackgroundColor = new[]
            {
                ColorUtil.ColorHexString(255, 99, 132), // Bar 1 aka "Red"
                ColorUtil.ColorHexString(255, 205, 86), // Bar 2 aka "Yellow"
                ColorUtil.ColorHexString(75, 192, 192), // Bar 3 aka "Green"
                ColorUtil.ColorHexString(54, 162, 235), // Bar 4 aka "Blue"
                ColorUtil.ColorHexString(153, 102, 255) // Bar 5 aka "Purple"
            }
        };

        _config.Data.Datasets.Add(dataset);
    }
}